name: BranchForge Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-ubuntu:
    name: Test on Ubuntu 24.04 (ROS2 Jazzy)
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        
        # Install core dependencies
        sudo apt-get install -y \
          build-essential \
          cmake \
          pkg-config \
          libgtest-dev \
          python3-pip \
          python3-setuptools
        
        # Install Qt6 packages (check availability first)
        echo "=== Installing Qt6 packages ==="
        sudo apt-get install -y \
          qt6-base-dev \
          qt6-declarative-dev \
          libqt6xml6 \
          qt6-tools-dev || echo "⚠️ Some Qt6 packages may not be available"

    - name: Install colcon
      run: |
        # Install colcon via pip since apt package doesn't exist on Ubuntu 24.04
        python3 -m pip install --user --upgrade pip
        python3 -m pip install --user colcon-common-extensions

    - name: Setup ROS 2 Jazzy
      run: |
        # Add ROS 2 apt repository
        sudo apt-get update
        sudo apt-get install -y software-properties-common curl
        curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu noble main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        
        sudo apt-get update
        sudo apt-get install -y \
          ros-jazzy-ros-core \
          ros-jazzy-rclcpp \
          ros-jazzy-ament-cmake \
          python3-rosdep
          
        # Initialize rosdep
        sudo rosdep init || true
        rosdep update

    - name: Install BehaviorTree.CPP
      run: |
        # Install from source using catkin build instead of conan
        cd /tmp
        git clone https://github.com/BehaviorTree/BehaviorTree.CPP.git --depth 1 --branch 4.5.2
        cd BehaviorTree.CPP
        mkdir build && cd build
        
        # Set catkin environment to avoid conan dependency
        export CATKIN_DEVEL_PREFIX=/opt/ros/jazzy
        
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_TESTING=OFF \
          -DBTCPP_EXAMPLES=OFF \
          -DBTCPP_UNIT_TESTS=OFF \
          -DBTCPP_GROOT_INTERFACE=OFF \
          -DBTCPP_SQLITE_LOGGING=OFF \
          -DBUILD_SHARED_LIBS=ON
        make -j$(nproc)
        sudo make install
        sudo ldconfig

    - name: Clean and Build BranchForge
      run: |
        source /opt/ros/jazzy/setup.bash
        export PATH=$HOME/.local/bin:$PATH
        export CMAKE_PREFIX_PATH="/usr/lib/x86_64-linux-gnu/cmake:$CMAKE_PREFIX_PATH"
        
        # Clean any existing build cache
        rm -rf build/ install/ log/
        
        # Build with fresh cache
        colcon build --packages-select branchforge \
          --cmake-args \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=ON \
            -DQt6_DIR="/usr/lib/x86_64-linux-gnu/cmake/Qt6"

    - name: Run Tests
      run: |
        source /opt/ros/jazzy/setup.bash
        export PATH=$HOME/.local/bin:$PATH
        source install/setup.bash
        
        echo "=== Running BranchForge Unit Tests ==="
        
        # Find and run all test executables
        find build/branchforge/tests -name "test_*" -type f -executable | while read test_exe; do
          echo "Running $(basename $test_exe)..."
          if $test_exe; then
            echo "✅ $(basename $test_exe) PASSED"
          else
            echo "❌ $(basename $test_exe) FAILED"
            exit 1
          fi
        done

    - name: Run specific BehaviorTreeXML test
      run: |
        echo "=== Running Core BehaviorTreeXML Tests ==="
        ./build/branchforge/tests/unit/test_behavior_tree_xml --gtest_output=xml:test_results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test_results.xml